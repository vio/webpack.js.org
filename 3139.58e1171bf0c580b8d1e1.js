"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[3139],{3139:function(e,t,a){a.r(t),a(7378);var n=a(2682);function r(){return(r=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}function o({components:e,...t}){return(0,n.kt)("wrapper",r({components:e},t),(0,n.kt)("p",null,"Webpack is capable of adding ",(0,n.kt)("inlineCode",{parentName:"p"},"nonce")," to all scripts that it loads. To activate the feature set a ",(0,n.kt)("inlineCode",{parentName:"p"},"__webpack_nonce__")," variable needs to be included in your entry script. A unique hash based nonce should be generated and provided for each unique page view this is why ",(0,n.kt)("inlineCode",{parentName:"p"},"__webpack_nonce__")," is specified in the entry file and not in the configuration. Please note that ",(0,n.kt)("inlineCode",{parentName:"p"},"nonce")," should always be a base64-encoded string."),(0,n.kt)("h2",{id:"examples"},"Examples",(0,n.kt)("a",{href:"#examples","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"In the entry file:"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."),"\n__webpack_nonce__ ",(0,n.kt)("span",{className:"token operator",parentName:"code"},"=")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'c29tZSBjb29sIHN0cmluZyB3aWxsIHBvcCB1cCAxMjM='"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// ..."))),(0,n.kt)("h2",{id:"enabling-csp"},"Enabling CSP",(0,n.kt)("a",{href:"#enabling-csp","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Please note that CSPs are not enabled by default. A corresponding header ",(0,n.kt)("inlineCode",{parentName:"p"},"Content-Security-Policy")," or meta tag ",(0,n.kt)("inlineCode",{parentName:"p"},'<meta http-equiv="Content-Security-Policy" ...>')," needs to be sent with the document to instruct the browser to enable the CSP. Here's an example of what a CSP header including a CDN white-listed URL might look like:"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-html",parentName:"pre"},"Content-Security-Policy: default-src 'self'; script-src 'self'\nhttps://trusted.cdn.com;")),(0,n.kt)("p",null,"For more information on CSP and ",(0,n.kt)("inlineCode",{parentName:"p"},"nonce")," attribute, please refer to ",(0,n.kt)("strong",{parentName:"p"},"Further Reading")," section at the bottom of this page."),(0,n.kt)("h2",{id:"trusted-types"},"Trusted Types",(0,n.kt)("a",{href:"#trusted-types","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Webpack is also capable of using Trusted Types to load dynamically constructed scripts, to adhere to CSP ",(0,n.kt)("a",{href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/require-trusted-types-for",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"require-trusted-types-for"))," directive restrictions. See ",(0,n.kt)("a",{href:"/configuration/output/#outputtrustedtypes",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"output.trustedTypes"))," configuration option."))}o.isMDXComponent=!0,t.default=o}}]);