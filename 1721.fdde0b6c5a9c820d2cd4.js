"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[1721],{1721:function(e,a,t){t.r(a),t(7378);var n=t(2682);function o(){return(o=Object.assign||function(e){for(var a=1;a<arguments.length;a++){var t=arguments[a];for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&(e[n]=t[n])}return e}).apply(this,arguments)}function r({components:e,...a}){return(0,n.kt)("wrapper",o({components:e},a),(0,n.kt)("p",null,"A resolver is a library which helps in locating a module by its absolute path.\nA module can be required as a dependency from another module as:"),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," foo ",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"from")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'path/to/module'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,n.kt)("span",{className:"token comment",parentName:"code"},"// or"),"\n",(0,n.kt)("span",{className:"token function",parentName:"code"},"require"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},"("),(0,n.kt)("span",{className:"token string",parentName:"code"},"'path/to/module'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},")"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"The dependency module can be from the application code or a third-party library. The resolver helps\nwebpack find the module code that needs to be included in the bundle for every such ",(0,n.kt)("inlineCode",{parentName:"p"},"require"),"/",(0,n.kt)("inlineCode",{parentName:"p"},"import")," statement.\nwebpack uses ",(0,n.kt)("a",{href:"https://github.com/webpack/enhanced-resolve",parentName:"p"},"enhanced-resolve")," to resolve file paths while bundling modules."),(0,n.kt)("h2",{id:"resolving-rules-in-webpack"},"Resolving rules in webpack",(0,n.kt)("a",{href:"#resolving-rules-in-webpack","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Using ",(0,n.kt)("inlineCode",{parentName:"p"},"enhanced-resolve"),", webpack can resolve three kinds of file paths:"),(0,n.kt)("h3",{id:"absolute-paths"},"Absolute paths",(0,n.kt)("a",{href:"#absolute-paths","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'/home/me/file'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n\n",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'C:\\\\Users\\\\me\\\\file'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"Since we already have the absolute path to the file, no further resolution is required."),(0,n.kt)("h3",{id:"relative-paths"},"Relative paths",(0,n.kt)("a",{href:"#relative-paths","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'../src/file1'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'./file2'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"In this case, the directory of the resource file where the ",(0,n.kt)("inlineCode",{parentName:"p"},"import")," or ",(0,n.kt)("inlineCode",{parentName:"p"},"require")," occurs is taken to be the context directory. The relative path specified in the ",(0,n.kt)("inlineCode",{parentName:"p"},"import/require")," is joined to this context path to produce the absolute path to the module."),(0,n.kt)("h3",{id:"module-paths"},"Module paths",(0,n.kt)("a",{href:"#module-paths","aria-hidden":"true",tabIndex:"-1",parentName:"h3"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("pre",null,(0,n.kt)("code",{className:"hljs language-js",parentName:"pre"},(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'module'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"),"\n",(0,n.kt)("span",{className:"token keyword",parentName:"code"},"import")," ",(0,n.kt)("span",{className:"token string",parentName:"code"},"'module/lib/file'"),(0,n.kt)("span",{className:"token punctuation",parentName:"code"},";"))),(0,n.kt)("p",null,"Modules are searched for inside all directories specified in ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvemodules",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.modules")),".\nYou can replace the original module path by an alternate path by creating an alias for it using the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvealias",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.alias"))," configuration option."),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the package contains a ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," file, then fields specified in ",(0,n.kt)("a",{href:"/configuration/resolve/#resolveexportsfields",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.exportsFields"))," configuration options are looked up in order, and the first such field in ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," determines the available exports from the package according to the ",(0,n.kt)("a",{href:"/guides/package-exports/",parentName:"li"},"package exports guideline"),".")),(0,n.kt)("p",null,"Once the path is resolved based on the above rule, the resolver checks to see if the path points to a file or a directory. If the path points to a file:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the path has a file extension, then the file is bundled straightaway."),(0,n.kt)("li",{parentName:"ul"},"Otherwise, the file extension is resolved using the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolveextensions",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.extensions"))," option, which tells the resolver which extensions are acceptable for resolution e.g. ",(0,n.kt)("inlineCode",{parentName:"li"},".js"),", ",(0,n.kt)("inlineCode",{parentName:"li"},".jsx"),".")),(0,n.kt)("p",null,"If the path points to a folder, then the following steps are taken to find the right file with the right extension:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"If the folder contains a ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," file, then fields specified in ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvemainfields",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.mainFields"))," configuration option are looked up in order, and the first such field in ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," determines the file path."),(0,n.kt)("li",{parentName:"ul"},"If there is no ",(0,n.kt)("inlineCode",{parentName:"li"},"package.json")," or if the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvemainfields",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.mainFields"))," do not return a valid path, file names specified in the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolvemainfiles",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.mainFiles"))," configuration option are looked for in order, to see if a matching filename exists in the imported/required directory."),(0,n.kt)("li",{parentName:"ul"},"The file extension is then resolved in a similar way using the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolveextensions",parentName:"li"},(0,n.kt)("inlineCode",{parentName:"a"},"resolve.extensions"))," option.")),(0,n.kt)("p",null,"Webpack provides reasonable ",(0,n.kt)("a",{href:"/configuration/resolve",parentName:"p"},"defaults")," for these options depending on your build target."),(0,n.kt)("h2",{id:"resolving-loaders"},"Resolving Loaders",(0,n.kt)("a",{href:"#resolving-loaders","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"This follows the same rules as those specified for file resolution. But the ",(0,n.kt)("a",{href:"/configuration/resolve/#resolveloader",parentName:"p"},(0,n.kt)("inlineCode",{parentName:"a"},"resolveLoader"))," configuration option can be used to have separate resolution rules for loaders."),(0,n.kt)("h2",{id:"caching"},"Caching",(0,n.kt)("a",{href:"#caching","aria-hidden":"true",tabIndex:"-1",parentName:"h2"},(0,n.kt)("span",{className:"header-link",parentName:"a"}))),(0,n.kt)("p",null,"Every filesystem access is cached so that multiple parallel or serial requests to the same file occur faster. In ",(0,n.kt)("a",{href:"/configuration/watch/#watch",parentName:"p"},"watch mode"),", only modified files are evicted from the cache. If watch mode is off, then the cache gets purged before every compilation."),(0,n.kt)("p",null,"See ",(0,n.kt)("a",{href:"/configuration/resolve",parentName:"p"},"Resolve API")," to learn more about the configuration options mentioned above."))}r.isMDXComponent=!0,a.default=r}}]);